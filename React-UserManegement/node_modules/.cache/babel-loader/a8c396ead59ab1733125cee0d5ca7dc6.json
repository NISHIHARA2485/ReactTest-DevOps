{"ast":null,"code":"import _slicedToArray from\"C:\\\\React\\\\React-UserManegement\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";/* eslint-disable react-hooks/exhaustive-deps */import{useCallback,useState}from\"react\";import{useMessage}from\"./useMessage\";// 選択したユーザー情報を特定しモーダルを表示するカスタムフック\nexport var useSelectUser=function useSelectUser(){var _useMessage=useMessage(),showMessage=_useMessage.showMessage;var _useState=useState(),_useState2=_slicedToArray(_useState,2),selectedUser=_useState2[0],setSelectedUser=_useState2[1];var onSelectUser=useCallback(function(props){var id=props.id,users=props.users,onOpen=props.onOpen;var targetUser=users.find(function(obj){return obj.id===id;});if(!targetUser){showMessage({title:\"ユーザーが見つかりません\",status:\"error\"});return;}else{setSelectedUser(targetUser);onOpen();}},[]);return{onSelectUser:onSelectUser,selectedUser:selectedUser};};","map":{"version":3,"sources":["C:/React/React-UserManegement/src/hooks/useSelectUser.ts"],"names":["useCallback","useState","useMessage","useSelectUser","showMessage","selectedUser","setSelectedUser","onSelectUser","props","id","users","onOpen","targetUser","find","obj","title","status"],"mappings":"2HAAA,gDACA,OAASA,WAAT,CAAsBC,QAAtB,KAAsC,OAAtC,CAGA,OAASC,UAAT,KAA2B,cAA3B,CAQA;AACA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACjC,gBAAwBD,UAAU,EAAlC,CAAQE,WAAR,aAAQA,WAAR,CAEA,cAAwCH,QAAQ,EAAhD,wCAAOI,YAAP,eAAqBC,eAArB,eAEA,GAAMC,CAAAA,YAAY,CAAGP,WAAW,CAAC,SAACQ,KAAD,CAAkB,CACjD,GAAQC,CAAAA,EAAR,CAA8BD,KAA9B,CAAQC,EAAR,CAAYC,KAAZ,CAA8BF,KAA9B,CAAYE,KAAZ,CAAmBC,MAAnB,CAA8BH,KAA9B,CAAmBG,MAAnB,CACA,GAAMC,CAAAA,UAAU,CAAGF,KAAK,CAACG,IAAN,CAAW,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACL,EAAJ,GAAWA,EAAf,EAAd,CAAnB,CACA,GAAI,CAACG,UAAL,CAAiB,CACfR,WAAW,CAAC,CAAEW,KAAK,CAAE,cAAT,CAAyBC,MAAM,CAAE,OAAjC,CAAD,CAAX,CACA,OACD,CAHD,IAGO,CACLV,eAAe,CAACM,UAAD,CAAf,CACAD,MAAM,GACP,CACF,CAV+B,CAU7B,EAV6B,CAAhC,CAWA,MAAO,CAAEJ,YAAY,CAAZA,YAAF,CAAgBF,YAAY,CAAZA,YAAhB,CAAP,CACD,CAjBM","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { useCallback, useState } from \"react\";\n\nimport { User } from \"../types/api/user\";\nimport { useMessage } from \"./useMessage\";\n\ntype Props = {\n  id: number;\n  users: Array<User>;\n  onOpen: () => void;\n};\n\n// 選択したユーザー情報を特定しモーダルを表示するカスタムフック\nexport const useSelectUser = () => {\n  const { showMessage } = useMessage();\n\n  const [selectedUser, setSelectedUser] = useState<User>();\n\n  const onSelectUser = useCallback((props: Props) => {\n    const { id, users, onOpen } = props;\n    const targetUser = users.find(obj => obj.id === id);\n    if (!targetUser) {\n      showMessage({ title: \"ユーザーが見つかりません\", status: \"error\" });\n      return;\n    } else {\n      setSelectedUser(targetUser);\n      onOpen();\n    }\n  }, []);\n  return { onSelectUser, selectedUser };\n};\n"]},"metadata":{},"sourceType":"module"}