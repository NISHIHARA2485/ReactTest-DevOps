{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useToast } from \"@chakra-ui/react\";\nimport { useCallback } from \"react\";\nexport var useMessage = function useMessage() {\n  _s();\n\n  var toast = useToast();\n  var showMessage = useCallback(function (props) {\n    var title = props.title,\n        status = props.status;\n    toast({\n      title: title,\n      status: status,\n      position: \"top\",\n      duration: 2000,\n      isClosable: true\n    });\n  }, [toast]);\n  return {\n    showMessage: showMessage\n  };\n};\n\n_s(useMessage, \"QoVYPldFF9bZOyBdfy4Twj+R7jk=\", false, function () {\n  return [useToast];\n});","map":{"version":3,"sources":["C:/React/React-UserManegement/src/hooks/useMessage.ts"],"names":["useToast","useCallback","useMessage","toast","showMessage","props","title","status","position","duration","isClosable"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,kBAAzB;AAEA,SAASC,WAAT,QAAsC,OAAtC;AASA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AAC9B,MAAMC,KAAK,GAAGH,QAAQ,EAAtB;AACA,MAAMI,WAAW,GAAGH,WAAW,CAC7B,UAACI,KAAD,EAAkB;AAChB,QAAQC,KAAR,GAA0BD,KAA1B,CAAQC,KAAR;AAAA,QAAeC,MAAf,GAA0BF,KAA1B,CAAeE,MAAf;AACAJ,IAAAA,KAAK,CAAC;AACJG,MAAAA,KAAK,EAALA,KADI;AAEJC,MAAAA,MAAM,EAANA,MAFI;AAGJC,MAAAA,QAAQ,EAAE,KAHN;AAIJC,MAAAA,QAAQ,EAAE,IAJN;AAKJC,MAAAA,UAAU,EAAE;AALR,KAAD,CAAL;AAOD,GAV4B,EAW7B,CAACP,KAAD,CAX6B,CAA/B;AAaA,SAAO;AAAEC,IAAAA,WAAW,EAAXA;AAAF,GAAP;AACD,CAhBM;;GAAMF,U;UACGF,Q","sourcesContent":["import { useToast } from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { useCallback, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { User } from \"../types/api/user\";\r\n\r\ntype Props = {\r\n  title: string;\r\n  status: \"info\" | \"warning\" | \"success\" | \"error\";\r\n};\r\n\r\nexport const useMessage = () => {\r\n  const toast = useToast();\r\n  const showMessage = useCallback(\r\n    (props: Props) => {\r\n      const { title, status } = props;\r\n      toast({\r\n        title,\r\n        status,\r\n        position: \"top\",\r\n        duration: 2000,\r\n        isClosable: true\r\n      });\r\n    },\r\n    [toast]\r\n  );\r\n  return { showMessage };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}