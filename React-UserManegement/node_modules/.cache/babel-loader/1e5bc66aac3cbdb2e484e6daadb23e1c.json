{"ast":null,"code":"import _objectSpread from\"C:\\\\React\\\\React-UserManegement\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import _asyncToGenerator from\"C:\\\\React\\\\React-UserManegement\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"C:\\\\React\\\\React-UserManegement\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\React\\\\React-UserManegement\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";/* eslint-disable react-hooks/exhaustive-deps */import{useCallback,useState}from\"react\";import axios from\"axios\";import{useHistory}from\"react-router-dom\";import{useMessage}from\"./useMessage\";import{useLoginUser}from\"../hooks/providers/useLoginUserProvider\";export var useAuth=function useAuth(){var history=useHistory();var _useMessage=useMessage(),showMessage=_useMessage.showMessage;var _useLoginUser=useLoginUser(),setLoginUser=_useLoginUser.setLoginUser;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var login=useCallback(function(id){setLoading(true);axios.get(\"https://jsonplaceholder.typicode.com/users/\".concat(id)).then(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(res){var isAdmin;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(res.data){// contextにログインユーザーの情報を保存\n// サンプル的にidが10のユーザーを管理者としてみる\nisAdmin=res.data.id===10?true:false;setLoginUser(_objectSpread(_objectSpread({},res.data),{},{isAdmin:isAdmin}));showMessage({title:\"ログインしました\",status:\"success\"});history.push(\"/home\");}else{showMessage({title:\"ユーザーが見つかりません\",status:\"error\"});setLoading(false);}case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}()).catch(function(){showMessage({title:\"ユーザーが見つかりません\",status:\"error\"});setLoading(false);});},[]);return{login:login,loading:loading};};","map":{"version":3,"sources":["C:/React/React-UserManegement/src/hooks/useAuth.ts"],"names":["useCallback","useState","axios","useHistory","useMessage","useLoginUser","useAuth","history","showMessage","setLoginUser","loading","setLoading","login","id","get","then","res","data","isAdmin","title","status","push","catch"],"mappings":"6eAAA,gDACA,OAASA,WAAT,CAAsBC,QAAtB,KAAsC,OAAtC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CAGA,OAASC,UAAT,KAA2B,cAA3B,CACA,OAASC,YAAT,KAA6B,yCAA7B,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CAC3B,GAAMC,CAAAA,OAAO,CAAGJ,UAAU,EAA1B,CACA,gBAAwBC,UAAU,EAAlC,CAAQI,WAAR,aAAQA,WAAR,CACA,kBAAyBH,YAAY,EAArC,CAAQI,YAAR,eAAQA,YAAR,CAEA,cAA8BR,QAAQ,CAAC,KAAD,CAAtC,wCAAOS,OAAP,eAAgBC,UAAhB,eAEA,GAAMC,CAAAA,KAAK,CAAGZ,WAAW,CAAC,SAACa,EAAD,CAAgB,CACxCF,UAAU,CAAC,IAAD,CAAV,CACAT,KAAK,CACFY,GADH,sDAC2DD,EAD3D,GAEGE,IAFH,0FAEQ,iBAAMC,GAAN,8HACJ,GAAIA,GAAG,CAACC,IAAR,CAAc,CACZ;AACA;AACMC,OAHM,CAGIF,GAAG,CAACC,IAAJ,CAASJ,EAAT,GAAgB,EAAhB,CAAqB,IAArB,CAA4B,KAHhC,CAIZJ,YAAY,gCAAMO,GAAG,CAACC,IAAV,MAAgBC,OAAO,CAAPA,OAAhB,GAAZ,CACAV,WAAW,CAAC,CAAEW,KAAK,CAAE,UAAT,CAAqBC,MAAM,CAAE,SAA7B,CAAD,CAAX,CACAb,OAAO,CAACc,IAAR,CAAa,OAAb,EACD,CAPD,IAOO,CACLb,WAAW,CAAC,CAAEW,KAAK,CAAE,cAAT,CAAyBC,MAAM,CAAE,OAAjC,CAAD,CAAX,CACAT,UAAU,CAAC,KAAD,CAAV,CACD,CAXG,sDAFR,gEAeGW,KAfH,CAeS,UAAM,CACXd,WAAW,CAAC,CAAEW,KAAK,CAAE,cAAT,CAAyBC,MAAM,CAAE,OAAjC,CAAD,CAAX,CACAT,UAAU,CAAC,KAAD,CAAV,CACD,CAlBH,EAmBD,CArBwB,CAqBtB,EArBsB,CAAzB,CAuBA,MAAO,CAAEC,KAAK,CAALA,KAAF,CAASF,OAAO,CAAPA,OAAT,CAAP,CACD,CA/BM","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { useCallback, useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { User } from \"../types/api/user\";\nimport { useMessage } from \"./useMessage\";\nimport { useLoginUser } from \"../hooks/providers/useLoginUserProvider\";\n\nexport const useAuth = () => {\n  const history = useHistory();\n  const { showMessage } = useMessage();\n  const { setLoginUser } = useLoginUser();\n\n  const [loading, setLoading] = useState(false);\n\n  const login = useCallback((id: string) => {\n    setLoading(true);\n    axios\n      .get<User>(`https://jsonplaceholder.typicode.com/users/${id}`)\n      .then(async res => {\n        if (res.data) {\n          // contextにログインユーザーの情報を保存\n          // サンプル的にidが10のユーザーを管理者としてみる\n          const isAdmin = res.data.id === 10 ? true : false;\n          setLoginUser({ ...res.data, isAdmin });\n          showMessage({ title: \"ログインしました\", status: \"success\" });\n          history.push(\"/home\");\n        } else {\n          showMessage({ title: \"ユーザーが見つかりません\", status: \"error\" });\n          setLoading(false);\n        }\n      })\n      .catch(() => {\n        showMessage({ title: \"ユーザーが見つかりません\", status: \"error\" });\n        setLoading(false);\n      });\n  }, []);\n\n  return { login, loading };\n};\n"]},"metadata":{},"sourceType":"module"}