{"ast":null,"code":"import _slicedToArray from \"C:\\\\React\\\\React-UserManegement\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { useCallback, useState } from \"react\";\nimport axios from \"axios\";\nimport { useMessage } from \"./useMessage\";\nexport var useAllUsers = function useAllUsers() {\n  _s();\n\n  var _useMessage = useMessage(),\n      showMessage = _useMessage.showMessage;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      users = _useState4[0],\n      setUsers = _useState4[1];\n\n  var getUsers = useCallback(function () {\n    setLoading(true);\n    axios.get(\"https://jsonplaceholder.typicode.com/users\").then(function (res) {\n      return setUsers(res.data);\n    }).catch(function () {\n      return showMessage({\n        title: \"ユーザー取得に失敗しました\",\n        status: \"error\"\n      });\n    }).finally(function () {\n      return setLoading(false);\n    });\n  }, []);\n  return {\n    getUsers: getUsers,\n    loading: loading,\n    users: users\n  };\n};\n\n_s(useAllUsers, \"8dUMYwPGv7zwo+V4bNih8iUfsto=\", false, function () {\n  return [useMessage];\n});","map":{"version":3,"sources":["C:/React/React-UserManegement/src/hooks/useAllUsers.ts"],"names":["useCallback","useState","axios","useMessage","useAllUsers","showMessage","loading","setLoading","users","setUsers","getUsers","get","then","res","data","catch","title","status","finally"],"mappings":";;;;AAAA;AACA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,SAASC,UAAT,QAA2B,cAA3B;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AAC/B,oBAAwBD,UAAU,EAAlC;AAAA,MAAQE,WAAR,eAAQA,WAAR;;AAEA,kBAA8BJ,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOK,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA0BN,QAAQ,CAAc,EAAd,CAAlC;AAAA;AAAA,MAAOO,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,QAAQ,GAAGV,WAAW,CAAC,YAAM;AACjCO,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAL,IAAAA,KAAK,CACFS,GADH,CACoB,4CADpB,EAEGC,IAFH,CAEQ,UAAAC,GAAG;AAAA,aAAIJ,QAAQ,CAACI,GAAG,CAACC,IAAL,CAAZ;AAAA,KAFX,EAGGC,KAHH,CAGS;AAAA,aACLV,WAAW,CAAC;AAAEW,QAAAA,KAAK,EAAE,eAAT;AAA0BC,QAAAA,MAAM,EAAE;AAAlC,OAAD,CADN;AAAA,KAHT,EAMGC,OANH,CAMW;AAAA,aAAMX,UAAU,CAAC,KAAD,CAAhB;AAAA,KANX;AAOD,GAT2B,EASzB,EATyB,CAA5B;AAWA,SAAO;AAAEG,IAAAA,QAAQ,EAARA,QAAF;AAAYJ,IAAAA,OAAO,EAAPA,OAAZ;AAAqBE,IAAAA,KAAK,EAALA;AAArB,GAAP;AACD,CAlBM;;GAAMJ,W;UACaD,U","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { useCallback, useState } from \"react\";\nimport axios from \"axios\";\n\nimport { User } from \"../types/api/user\";\nimport { useMessage } from \"./useMessage\";\n\nexport const useAllUsers = () => {\n  const { showMessage } = useMessage();\n\n  const [loading, setLoading] = useState(false);\n  const [users, setUsers] = useState<Array<User>>([]);\n\n  const getUsers = useCallback(() => {\n    setLoading(true);\n    axios\n      .get<Array<User>>(\"https://jsonplaceholder.typicode.com/users\")\n      .then(res => setUsers(res.data))\n      .catch(() =>\n        showMessage({ title: \"ユーザー取得に失敗しました\", status: \"error\" })\n      )\n      .finally(() => setLoading(false));\n  }, []);\n\n  return { getUsers, loading, users };\n};\n"]},"metadata":{},"sourceType":"module"}