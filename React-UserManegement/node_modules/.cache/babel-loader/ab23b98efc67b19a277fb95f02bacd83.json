{"ast":null,"code":"import _slicedToArray from \"C:\\\\React\\\\React-UserManegement\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\React\\\\React-UserManegement\\\\src\\\\components\\\\pages\\\\login\\\\Login.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { memo, useState } from \"react\";\nimport { Box, Divider, Flex, Heading, Input, Stack } from \"@chakra-ui/react\";\nimport { PrimaryButton } from \"../../atoms/button/PrimaryButton\";\nimport { useAuth } from \"../../../hooks/useAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var Login = /*#__PURE__*/memo(_c = _s(function () {\n  _s();\n\n  var _useAuth = useAuth(),\n      login = _useAuth.login,\n      loading = _useAuth.loading;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      userId = _useState2[0],\n      setUserId = _useState2[1];\n\n  var onClickLogin = function onClickLogin() {\n    login(userId);\n  };\n\n  var onChangeUserId = function onChangeUserId(e) {\n    return setUserId(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: \"100vh\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      bg: \"white\",\n      w: \"sm\",\n      p: 4,\n      borderRadius: \"md\",\n      shadow: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h1\",\n        size: \"lg\",\n        textAlign: \"center\",\n        children: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u7BA1\\u7406\\u30A2\\u30D7\\u30EA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Divider, {\n        my: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 6,\n        py: 4,\n        px: 10,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"\\u30E6\\u30FC\\u30B6\\u30FCID\",\n          value: userId,\n          onChange: onChangeUserId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n          isFullWidth: true,\n          disabled: userId === \"\",\n          isLoading: loading,\n          onClick: onClickLogin,\n          children: \"\\u30ED\\u30B0\\u30A4\\u30F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, _this);\n}, \"bfLlbTPlBD1lrVlBk/iC5B+NrCk=\", false, function () {\n  return [useAuth];\n}));\n_c2 = Login;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Login$memo\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"sources":["C:/React/React-UserManegement/src/components/pages/login/Login.tsx"],"names":["memo","useState","Box","Divider","Flex","Heading","Input","Stack","PrimaryButton","useAuth","Login","login","loading","userId","setUserId","onClickLogin","onChangeUserId","e","target","value"],"mappings":";;;;;;AAAA,SAAsBA,IAAtB,EAA4BC,QAA5B,QAAiD,OAAjD;AACA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,IAAvB,EAA6BC,OAA7B,EAAsCC,KAAtC,EAA6CC,KAA7C,QAA0D,kBAA1D;AAEA,SAASC,aAAT,QAA8B,kCAA9B;AACA,SAASC,OAAT,QAAwB,wBAAxB;;AAEA,OAAO,IAAMC,KAAU,gBAAGV,IAAI,SAAC,YAAM;AAAA;;AACnC,iBAA2BS,OAAO,EAAlC;AAAA,MAAQE,KAAR,YAAQA,KAAR;AAAA,MAAeC,OAAf,YAAeA,OAAf;;AAEA,kBAA4BX,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOY,MAAP;AAAA,MAAeC,SAAf;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBJ,IAAAA,KAAK,CAACE,MAAD,CAAL;AACD,GAFD;;AAIA,MAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACC,CAAD;AAAA,WACrBH,SAAS,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CADY;AAAA,GAAvB;;AAGA,sBACE,QAAC,IAAD;AAAM,IAAA,UAAU,EAAC,QAAjB;AAA0B,IAAA,cAAc,EAAC,QAAzC;AAAkD,IAAA,MAAM,EAAC,OAAzD;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAC,OAAR;AAAgB,MAAA,CAAC,EAAC,IAAlB;AAAuB,MAAA,CAAC,EAAE,CAA1B;AAA6B,MAAA,YAAY,EAAC,IAA1C;AAA+C,MAAA,MAAM,EAAC,IAAtD;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,EAAE,EAAC,IAAZ;AAAiB,QAAA,IAAI,EAAC,IAAtB;AAA2B,QAAA,SAAS,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAIE,QAAC,OAAD;AAAS,QAAA,EAAE,EAAE;AAAb;AAAA;AAAA;AAAA;AAAA,eAJF,eAKE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAE,CAAhB;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAA0B,QAAA,EAAE,EAAE,EAA9B;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,WAAW,EAAC,4BADd;AAEE,UAAA,KAAK,EAAEN,MAFT;AAGE,UAAA,QAAQ,EAAEG;AAHZ;AAAA;AAAA;AAAA;AAAA,iBADF,eAME,QAAC,aAAD;AACE,UAAA,WAAW,MADb;AAEE,UAAA,QAAQ,EAAEH,MAAM,KAAK,EAFvB;AAGE,UAAA,SAAS,EAAED,OAHb;AAIE,UAAA,OAAO,EAAEG,YAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF;AAAA;AAAA;AAAA;AAAA;AAAA,eALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAyBD,CArC6B;AAAA,UACDN,OADC;AAAA,GAAvB;MAAMC,K","sourcesContent":["import { ChangeEvent, memo, useState, VFC } from \"react\";\nimport { Box, Divider, Flex, Heading, Input, Stack } from \"@chakra-ui/react\";\n\nimport { PrimaryButton } from \"../../atoms/button/PrimaryButton\";\nimport { useAuth } from \"../../../hooks/useAuth\";\n\nexport const Login: VFC = memo(() => {\n  const { login, loading } = useAuth();\n\n  const [userId, setUserId] = useState(\"\");\n\n  const onClickLogin = () => {\n    login(userId);\n  };\n\n  const onChangeUserId = (e: ChangeEvent<HTMLInputElement>) =>\n    setUserId(e.target.value);\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" height=\"100vh\">\n      <Box bg=\"white\" w=\"sm\" p={4} borderRadius=\"md\" shadow=\"md\">\n        <Heading as=\"h1\" size=\"lg\" textAlign=\"center\">\n          ユーザー管理アプリ\n        </Heading>\n        <Divider my={4} />\n        <Stack spacing={6} py={4} px={10}>\n          <Input\n            placeholder=\"ユーザーID\"\n            value={userId}\n            onChange={onChangeUserId}\n          />\n          <PrimaryButton\n            isFullWidth\n            disabled={userId === \"\"}\n            isLoading={loading}\n            onClick={onClickLogin}\n          >\n            ログイン\n          </PrimaryButton>\n        </Stack>\n      </Box>\n    </Flex>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}