{"ast":null,"code":"import _slicedToArray from \"C:\\\\React\\\\React-UserManegement\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\React\\\\React-UserManegement\\\\src\\\\hooks\\\\providers\\\\useLoginUserProvider.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar LoginUserContext = /*#__PURE__*/createContext({}); // ログインユーザー情報を保持するcontext\n\nexport var LoginUserProvider = function LoginUserProvider(props) {\n  _s();\n\n  var children = props.children;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      loginUser = _useState2[0],\n      setLoginUser = _useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(LoginUserContext.Provider, {\n    value: {\n      loginUser: loginUser,\n      setLoginUser: setLoginUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(LoginUserProvider, \"ocTEO6sXRoxGC0Cs9JxC3OHDZM0=\");\n\n_c = LoginUserProvider;\nexport var useLoginUser = function useLoginUser() {\n  _s2();\n\n  return useContext(LoginUserContext);\n};\n\n_s2(useLoginUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginUserProvider\");","map":{"version":3,"sources":["C:/React/React-UserManegement/src/hooks/providers/useLoginUserProvider.tsx"],"names":["React","createContext","useContext","useState","LoginUserContext","LoginUserProvider","props","children","loginUser","setLoginUser","useLoginUser"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IACEC,aADF,EAKEC,UALF,EAMEC,QANF,QAOO,OAPP;;AAkBA,IAAMC,gBAAgB,gBAAGH,aAAa,CACpC,EADoC,CAAtC,C,CAIA;;AACA,OAAO,IAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAoC;AAAA;;AACnE,MAAQC,QAAR,GAAqBD,KAArB,CAAQC,QAAR;;AACA,kBAAkCJ,QAAQ,CAAmB,IAAnB,CAA1C;AAAA;AAAA,MAAOK,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,sBACE,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAAED,MAAAA,SAAS,EAATA,SAAF;AAAaC,MAAAA,YAAY,EAAZA;AAAb,KAAlC;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CATM;;GAAMF,iB;;KAAAA,iB;AAWb,OAAO,IAAMK,YAAY,GAAG,SAAfA,YAAe;AAAA;;AAAA,SAC1BR,UAAU,CAACE,gBAAD,CADgB;AAAA,CAArB;;IAAMM,Y","sourcesContent":["import React, {\n  createContext,\n  Dispatch,\n  ReactNode,\n  SetStateAction,\n  useContext,\n  useState\n} from \"react\";\n\nimport { User } from \"../../types/api/user\";\n\ntype LoginUser = User & { isAdmin: boolean };\n\ntype LoginUserContextType = {\n  loginUser: LoginUser | null;\n  setLoginUser: Dispatch<SetStateAction<LoginUser | null>>;\n};\n\nconst LoginUserContext = createContext<LoginUserContextType>(\n  {} as LoginUserContextType\n);\n\n// ログインユーザー情報を保持するcontext\nexport const LoginUserProvider = (props: { children: ReactNode }) => {\n  const { children } = props;\n  const [loginUser, setLoginUser] = useState<LoginUser | null>(null);\n\n  return (\n    <LoginUserContext.Provider value={{ loginUser, setLoginUser }}>\n      {children}\n    </LoginUserContext.Provider>\n  );\n};\n\nexport const useLoginUser = (): LoginUserContextType =>\n  useContext(LoginUserContext);\n"]},"metadata":{},"sourceType":"module"}