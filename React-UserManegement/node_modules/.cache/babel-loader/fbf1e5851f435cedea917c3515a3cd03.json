{"ast":null,"code":"import{memo,useCallback,useEffect}from\"react\";import{Center,Spinner,useDisclosure,Wrap,WrapItem}from\"@chakra-ui/react\";import{UserCard}from\"../../organisms/user/UserCard\";import{useAllUsers}from\"../../../hooks/useAllUsers\";import{UserDetailModal}from\"../../organisms/modal/UserDetailModal\";import{useSelectUser}from\"../../../hooks/useSelectUser\";import{useLoginUser}from\"../../../hooks/providers/useLoginUserProvider\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var UserManagement=/*#__PURE__*/memo(function(){var _useDisclosure=useDisclosure(),isOpen=_useDisclosure.isOpen,onOpen=_useDisclosure.onOpen,onClose=_useDisclosure.onClose;var _useAllUsers=useAllUsers(),getUsers=_useAllUsers.getUsers,loading=_useAllUsers.loading,users=_useAllUsers.users;var _useSelectUser=useSelectUser(),onSelectUser=_useSelectUser.onSelectUser,selectedUser=_useSelectUser.selectedUser;var _useLoginUser=useLoginUser(),loginUser=_useLoginUser.loginUser;useEffect(function(){return getUsers();},[getUsers]);var onClickUser=useCallback(function(id){onSelectUser({id:id,users:users,onOpen:onOpen});},[users,onSelectUser,onOpen]);return/*#__PURE__*/_jsxs(_Fragment,{children:[loading?/*#__PURE__*/_jsx(Center,{h:\"100vh\",children:/*#__PURE__*/_jsx(Spinner,{color:\"teal.200\"})}):/*#__PURE__*/_jsx(Wrap,{p:{base:4,md:10},children:users.map(function(obj){return/*#__PURE__*/_jsx(WrapItem,{mx:\"auto\",children:/*#__PURE__*/_jsx(UserCard,{id:obj.id,imageUrl:\"https://source.unsplash.com/random\",userName:obj.username,fullName:obj.name,onClick:onClickUser})},obj.id);})}),/*#__PURE__*/_jsx(UserDetailModal,{isOpen:isOpen,isAdmin:loginUser===null||loginUser===void 0?void 0:loginUser.isAdmin,onClose:onClose,user:selectedUser})]});});","map":{"version":3,"sources":["C:/React/React-UserManegement/src/components/pages/home/UserManagement.tsx"],"names":["memo","useCallback","useEffect","Center","Spinner","useDisclosure","Wrap","WrapItem","UserCard","useAllUsers","UserDetailModal","useSelectUser","useLoginUser","UserManagement","isOpen","onOpen","onClose","getUsers","loading","users","onSelectUser","selectedUser","loginUser","onClickUser","id","base","md","map","obj","username","name","isAdmin"],"mappings":"AAAA,OAASA,IAAT,CAAeC,WAAf,CAA4BC,SAA5B,KAAkD,OAAlD,CACA,OACEC,MADF,CAEEC,OAFF,CAGEC,aAHF,CAIEC,IAJF,CAKEC,QALF,KAMO,kBANP,CAQA,OAASC,QAAT,KAAyB,+BAAzB,CACA,OAASC,WAAT,KAA4B,4BAA5B,CACA,OAASC,eAAT,KAAgC,uCAAhC,CACA,OAASC,aAAT,KAA8B,8BAA9B,CACA,OAASC,YAAT,KAA6B,+CAA7B,C,6IAEA,MAAO,IAAMC,CAAAA,cAAmB,cAAGb,IAAI,CAAC,UAAM,CAC5C,mBAAoCK,aAAa,EAAjD,CAAQS,MAAR,gBAAQA,MAAR,CAAgBC,MAAhB,gBAAgBA,MAAhB,CAAwBC,OAAxB,gBAAwBA,OAAxB,CACA,iBAAqCP,WAAW,EAAhD,CAAQQ,QAAR,cAAQA,QAAR,CAAkBC,OAAlB,cAAkBA,OAAlB,CAA2BC,KAA3B,cAA2BA,KAA3B,CACA,mBAAuCR,aAAa,EAApD,CAAQS,YAAR,gBAAQA,YAAR,CAAsBC,YAAtB,gBAAsBA,YAAtB,CACA,kBAAsBT,YAAY,EAAlC,CAAQU,SAAR,eAAQA,SAAR,CAEApB,SAAS,CAAC,iBAAMe,CAAAA,QAAQ,EAAd,EAAD,CAAmB,CAACA,QAAD,CAAnB,CAAT,CAEA,GAAMM,CAAAA,WAAW,CAAGtB,WAAW,CAC7B,SAACuB,EAAD,CAAgB,CACdJ,YAAY,CAAC,CAAEI,EAAE,CAAFA,EAAF,CAAML,KAAK,CAALA,KAAN,CAAaJ,MAAM,CAANA,MAAb,CAAD,CAAZ,CACD,CAH4B,CAI7B,CAACI,KAAD,CAAQC,YAAR,CAAsBL,MAAtB,CAJ6B,CAA/B,CAOA,mBACE,2BACGG,OAAO,cACN,KAAC,MAAD,EAAQ,CAAC,CAAC,OAAV,uBACE,KAAC,OAAD,EAAS,KAAK,CAAC,UAAf,EADF,EADM,cAKN,KAAC,IAAD,EAAM,CAAC,CAAE,CAAEO,IAAI,CAAE,CAAR,CAAWC,EAAE,CAAE,EAAf,CAAT,UACGP,KAAK,CAACQ,GAAN,CAAU,SAAAC,GAAG,qBACZ,KAAC,QAAD,EAAuB,EAAE,CAAC,MAA1B,uBACE,KAAC,QAAD,EACE,EAAE,CAAEA,GAAG,CAACJ,EADV,CAEE,QAAQ,CAAC,oCAFX,CAGE,QAAQ,CAAEI,GAAG,CAACC,QAHhB,CAIE,QAAQ,CAAED,GAAG,CAACE,IAJhB,CAKE,OAAO,CAAEP,WALX,EADF,EAAeK,GAAG,CAACJ,EAAnB,CADY,EAAb,CADH,EANJ,cAoBE,KAAC,eAAD,EACE,MAAM,CAAEV,MADV,CAEE,OAAO,CAAEQ,SAAF,SAAEA,SAAF,iBAAEA,SAAS,CAAES,OAFtB,CAGE,OAAO,CAAEf,OAHX,CAIE,IAAI,CAAEK,YAJR,EApBF,GADF,CA6BD,CA5CsC,CAAhC","sourcesContent":["import { memo, useCallback, useEffect, VFC } from \"react\";\nimport {\n  Center,\n  Spinner,\n  useDisclosure,\n  Wrap,\n  WrapItem\n} from \"@chakra-ui/react\";\n\nimport { UserCard } from \"../../organisms/user/UserCard\";\nimport { useAllUsers } from \"../../../hooks/useAllUsers\";\nimport { UserDetailModal } from \"../../organisms/modal/UserDetailModal\";\nimport { useSelectUser } from \"../../../hooks/useSelectUser\";\nimport { useLoginUser } from \"../../../hooks/providers/useLoginUserProvider\";\n\nexport const UserManagement: VFC = memo(() => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const { getUsers, loading, users } = useAllUsers();\n  const { onSelectUser, selectedUser } = useSelectUser();\n  const { loginUser } = useLoginUser();\n\n  useEffect(() => getUsers(), [getUsers]);\n\n  const onClickUser = useCallback(\n    (id: number) => {\n      onSelectUser({ id, users, onOpen });\n    },\n    [users, onSelectUser, onOpen]\n  );\n\n  return (\n    <>\n      {loading ? (\n        <Center h=\"100vh\">\n          <Spinner color=\"teal.200\" />\n        </Center>\n      ) : (\n        <Wrap p={{ base: 4, md: 10 }}>\n          {users.map(obj => (\n            <WrapItem key={obj.id} mx=\"auto\">\n              <UserCard\n                id={obj.id}\n                imageUrl=\"https://source.unsplash.com/random\"\n                userName={obj.username}\n                fullName={obj.name}\n                onClick={onClickUser}\n              />\n            </WrapItem>\n          ))}\n        </Wrap>\n      )}\n      <UserDetailModal\n        isOpen={isOpen}\n        isAdmin={loginUser?.isAdmin}\n        onClose={onClose}\n        user={selectedUser}\n      />\n    </>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}