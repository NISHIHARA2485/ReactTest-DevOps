{"version":3,"sources":["theme/theme.ts","hooks/useAuth.ts","hooks/useMessage.ts","components/atoms/button/PrimaryButton.tsx","components/pages/Login.tsx","components/pages/Setting.tsx","components/pages/UserManagement.tsx","components/pages/Home.tsx","components/pages/Page404.tsx","router/HomeRoutes.tsx","components/atoms/button/MenuIconButton.tsx","components/molecules/MenuDrawer.tsx","components/organisms/layout/Header.tsx","components/templates/HeaderLayout.tsx","router/Router.tsx","App.tsx","index.tsx"],"names":["theme","extendTheme","styles","global","body","backgroundColor","color","useAuth","history","useHistory","showMessage","toast","useToast","useCallback","props","title","status","position","duration","isClosable","useMessage","useState","loading","setLoading","login","id","axios","get","then","res","data","push","catch","finally","PrimaryButton","memo","children","disabled","onClick","bg","_hover","opacity","isLoading","Login","userId","setUserId","align","justify","height","w","p","borderRadius","shadow","as","size","textAlign","my","spacing","py","px","placeholder","value","onChange","e","target","Setting","UserManagement","h","Home","Page404","homeRoutes","path","exact","MenuIconButton","onOpen","icon","variant","display","base","md","MenuDrawer","onClose","isOpen","onClickHome","onClickUserManagement","onClickSetting","placement","Header","useDisclosure","padding","mr","cursor","fontSize","flexGrow","pr","HeaderLayout","Router","render","url","match","map","route","App","rootElement","document","getElementById"],"mappings":"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","file":"static/js/main.6a84041b.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\";\r\n\r\nconst theme = extendTheme({\r\n  styles: {\r\n    global: {\r\n      body: {\r\n        backgroundColor: \"gray.100\",\r\n        color: \"gray.800\"\r\n      }\r\n    }\r\n  }\r\n});\r\nexport default theme;\r\n","import axios from \"axios\";\r\nimport { useCallback, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { User } from \"../types/api/user\";\r\nimport { useMessage } from \"./useMessage\";\r\n\r\nexport const useAuth = () => {\r\n  const history = useHistory();\r\n  const { showMessage } = useMessage();\r\n  const [loading, setLoading] = useState(false);\r\n  const login = useCallback(\r\n    (id: string) => {\r\n      setLoading(true);\r\n      axios\r\n        .get<User>(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n        .then((res) => {\r\n          if (res.data) {\r\n            showMessage({ title: \"ログインしました\", status: \"success\" });\r\n            history.push(\"/home\");\r\n          } else {\r\n            showMessage({ title: \"ユーザーが見つかりません\", status: \"error\" });\r\n          }\r\n        })\r\n        .catch(() =>\r\n          showMessage({ title: \"ログインできません\", status: \"error\" })\r\n        )\r\n        .finally(() => setLoading(false));\r\n    },\r\n    [history]\r\n  );\r\n  return { login, loading };\r\n};\r\n","import { useToast } from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { useCallback, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { User } from \"../types/api/user\";\r\n\r\ntype Props = {\r\n  title: string;\r\n  status: \"info\" | \"warning\" | \"success\" | \"error\";\r\n};\r\n\r\nexport const useMessage = () => {\r\n  const toast = useToast();\r\n  const showMessage = useCallback(\r\n    (props: Props) => {\r\n      const { title, status } = props;\r\n      toast({\r\n        title,\r\n        status,\r\n        position: \"top\",\r\n        duration: 2000,\r\n        isClosable: true\r\n      });\r\n    },\r\n    [toast]\r\n  );\r\n  return { showMessage };\r\n};\r\n","import { memo, ReactNode, VFC } from \"react\";\r\nimport { Button } from \"@chakra-ui/react\";\r\n\r\ntype Props = {\r\n  children: ReactNode;\r\n  disabled?: boolean;\r\n  loading?: boolean;\r\n  onClick: () => void;\r\n};\r\n\r\nexport const PrimaryButton: VFC<Props> = memo((props) => {\r\n  const { children, disabled = false, loading = false, onClick } = props;\r\n  return (\r\n    <Button\r\n      bg=\"teal.400\"\r\n      color=\"white\"\r\n      _hover={{ opacity: 0.8 }}\r\n      disabled={disabled || loading}\r\n      isLoading={loading}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n});\r\n","import { Box, Divider, Flex, Heading, Input, Stack } from \"@chakra-ui/react\";\r\n\r\nimport { ChangeEvent, memo, useState, VFC } from \"react\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport { PrimaryButton } from \"../atoms/button/PrimaryButton\";\r\n\r\nexport const Login: VFC = memo(() => {\r\n  const { login, loading } = useAuth();\r\n  const [userId, setUserId] = useState(\"\");\r\n\r\n  const onChangeUserId = (e: ChangeEvent<HTMLInputElement>) =>\r\n    setUserId(e.target.value);\r\n\r\n  const onClickLogin = () => login(userId);\r\n\r\n  return (\r\n    <Flex align=\"center\" justify=\"center\" height=\"100vh\">\r\n      <Box bg=\"white\" w=\"sm\" p={4} borderRadius=\"md\" shadow=\"md\">\r\n        <Heading as=\"h1\" size=\"lg\" textAlign=\"center\">\r\n          MAEDA TAKUTO\r\n        </Heading>\r\n        <Divider my={4} />\r\n        <Stack spacing={6} py={4} px={10}>\r\n          <Input\r\n            placeholder=\"ユーザーID\"\r\n            value={userId}\r\n            onChange={onChangeUserId}\r\n          />\r\n          <PrimaryButton\r\n            disabled={userId === \"\"}\r\n            loading={loading}\r\n            onClick={onClickLogin}\r\n          >\r\n            ログイン\r\n          </PrimaryButton>\r\n        </Stack>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n});\r\n","import { memo, VFC } from \"react\";\r\n\r\nexport const Setting: VFC = memo(() => {\r\n  return <p>設定</p>;\r\n});\r\n","import { background, Box, Stack, Wrap, WrapItem } from \"@chakra-ui/react\";\r\nimport { memo, VFC } from \"react\";\r\n\r\nexport const UserManagement: VFC = memo(() => {\r\n  return (\r\n    <Wrap>\r\n      <WrapItem>\r\n        <Box w=\"260px\" h=\"260px\" bg=\"white\" borderRadius=\"10px\" shadow=\"md\">\r\n          <Stack textAlign=\"center\"></Stack>\r\n        </Box>\r\n      </WrapItem>\r\n    </Wrap>\r\n  );\r\n});\r\n","import { memo, VFC } from \"react\";\r\n\r\nexport const Home: VFC = memo(() => {\r\n  return <p>ホームページ</p>;\r\n});\r\n","import { memo, VFC } from \"react\";\r\n\r\nexport const Page404: VFC = memo(() => {\r\n  return <p>404</p>;\r\n});\r\n","import { Setting } from \"../components/pages/Setting\";\r\nimport { UserManagement } from \"../components/pages/UserManagement\";\r\nimport { Home } from \"../components/pages/Home\";\r\nimport { Page404 } from \"../components/pages/Page404\";\r\n\r\nexport const homeRoutes = [\r\n  {\r\n    path: \"/\",\r\n    exact: true,\r\n    children: <Home />\r\n  },\r\n  {\r\n    path: \"/user_manegement\",\r\n    exact: false,\r\n    children: <UserManagement />\r\n  },\r\n  {\r\n    path: \"/setting\",\r\n    exact: false,\r\n    children: <Setting />\r\n  },\r\n  {\r\n    path: \"*\",\r\n    exact: false,\r\n    children: <Page404 />\r\n  }\r\n];\r\n","import { memo, VFC } from \"react\";\r\nimport { IconButton } from \"@chakra-ui/react\";\r\nimport { HamburgerIcon } from \"@chakra-ui/icons\";\r\n\r\ntype Props = {\r\n  onOpen: () => void;\r\n};\r\n\r\nexport const MenuIconButton: VFC<Props> = memo((props) => {\r\n  const { onOpen } = props;\r\n  return (\r\n    <IconButton\r\n      aria-label=\"メニューボタン\"\r\n      icon={<HamburgerIcon />}\r\n      size=\"sm\"\r\n      variant=\"unstyled\"\r\n      display={{ base: \"block\", md: \"none\" }}\r\n      onClick={onOpen}\r\n    />\r\n  );\r\n});\r\n","import { memo, VFC } from \"react\";\r\nimport {\r\n  DrawerBody,\r\n  DrawerContent,\r\n  DrawerOverlay,\r\n  Drawer,\r\n  Button\r\n} from \"@chakra-ui/react\";\r\nimport { HamburgerIcon } from \"@chakra-ui/icons\";\r\n\r\ntype Props = {\r\n  onClose: () => void;\r\n  isOpen: boolean;\r\n  onClickHome: () => void;\r\n  onClickUserManagement: () => void;\r\n  onClickSetting: () => void;\r\n};\r\n\r\nexport const MenuDrawer: VFC<Props> = memo((props) => {\r\n  const {\r\n    onClose,\r\n    isOpen,\r\n    onClickHome,\r\n    onClickUserManagement,\r\n    onClickSetting\r\n  } = props;\r\n\r\n  return (\r\n    <Drawer placement=\"left\" size=\"xs\" onClose={onClose} isOpen={isOpen}>\r\n      <DrawerOverlay>\r\n        <DrawerContent>\r\n          <DrawerBody p={0} bg={\"gray.100\"}>\r\n            <Button w=\"100%\" onClick={onClickHome}>\r\n              TOP\r\n            </Button>\r\n            <Button w=\"100%\" onClick={onClickUserManagement}>\r\n              ユーザー一覧\r\n            </Button>\r\n            <Button w=\"100%\" onClick={onClickSetting}>\r\n              設定\r\n            </Button>\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </DrawerOverlay>\r\n    </Drawer>\r\n  );\r\n});\r\n","import {\r\n  Box,\r\n  Button,\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerContent,\r\n  DrawerOverlay,\r\n  Flex,\r\n  Heading,\r\n  IconButton,\r\n  Link,\r\n  useDisclosure\r\n} from \"@chakra-ui/react\";\r\nimport { memo, useCallback, VFC } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n//import { HamburgerIcon } from \"@chakra-ui/icons\";\r\nimport { MenuIconButton } from \"../../atoms/button/MenuIconButton\";\r\nimport { MenuDrawer } from \"../../molecules/MenuDrawer\";\r\n\r\nexport const Header: VFC = memo(() => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const history = useHistory();\r\n\r\n  const onClickHome = useCallback(() => history.push(\"/home\"), [history]);\r\n  const onClickUserManagement = useCallback(\r\n    () => history.push(\"/home/user_manegement\"),\r\n    [history]\r\n  );\r\n  const onClickSetting = useCallback(() => history.push(\"/home/setting\"), [\r\n    history\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <Flex\r\n        as=\"nav\"\r\n        bg=\"teal.500\"\r\n        color=\"gray.50\"\r\n        align=\"center\"\r\n        justify=\"space-between\"\r\n        padding={{ base: 3, md: 5 }}\r\n      >\r\n        <Flex\r\n          align=\"center\"\r\n          as=\"a\"\r\n          mr={8}\r\n          _hover={{ cursor: \"pointer\" }}\r\n          onClick={onClickHome}\r\n        >\r\n          <Heading as=\"h1\" fontSize={{ base: \"md\", md: \"lg\" }}>\r\n            MAEDA TAKUTO\r\n          </Heading>\r\n        </Flex>\r\n        <Flex\r\n          align=\"center\"\r\n          fontSize=\"sm\"\r\n          flexGrow={2}\r\n          display={{ base: \"none\", md: \"flex\" }}\r\n        >\r\n          <Box pr={4}>\r\n            <Link onClick={onClickUserManagement}>一覧</Link>\r\n          </Box>\r\n          <Link onClick={onClickSetting}>設定</Link>\r\n        </Flex>\r\n        <MenuIconButton onOpen={onOpen} />\r\n      </Flex>\r\n      <MenuDrawer\r\n        onClose={onClose}\r\n        isOpen={isOpen}\r\n        onClickHome={onClickHome}\r\n        onClickUserManagement={onClickUserManagement}\r\n        onClickSetting={onClickSetting}\r\n      />\r\n    </>\r\n  );\r\n});\r\n","import { memo, ReactNode, VFC } from \"react\";\r\nimport { Header } from \"../organisms/layout/Header\";\r\n\r\ntype Props = {\r\n  children: ReactNode;\r\n};\r\n\r\nexport const HeaderLayout: VFC<Props> = memo((props) => {\r\n  const { children } = props;\r\n  return (\r\n    <>\r\n      <Header />\r\n      {children}\r\n    </>\r\n  );\r\n});\r\n","import { memo, VFC } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { Login } from \"../components/pages/Login\";\r\nimport { homeRoutes } from \"./HomeRoutes\";\r\nimport { Page404 } from \"../components/pages/Page404\";\r\nimport { HeaderLayout } from \"../components/templates/HeaderLayout\";\r\n\r\nexport const Router: VFC = memo(() => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        <Login />\r\n      </Route>\r\n      <Route\r\n        path=\"/home\"\r\n        render={({ match: { url } }) => (\r\n          <Switch>\r\n            {homeRoutes.map((route) => (\r\n              <Route\r\n                key={route.path}\r\n                exact={route.exact}\r\n                path={`${url}${route.path}`}\r\n              >\r\n                <HeaderLayout>{route.children}</HeaderLayout>\r\n              </Route>\r\n            ))}\r\n          </Switch>\r\n        )}\r\n      />\r\n      <Route path=\"*\">\r\n        <Page404 />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n});\r\n","import { ChakraProvider } from \"@chakra-ui/react\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport theme from \"./theme/theme\";\nimport { Router } from \"./router/Router\";\n\nexport default function App() {\n  return (\n    <ChakraProvider theme={theme}>\n      <BrowserRouter>\n        <Router />\n      </BrowserRouter>\n    </ChakraProvider>\n  );\n}\n","import { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}